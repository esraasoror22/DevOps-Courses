server {
        listen 80 default_server;
        listen [::]:80 default_server;
	return 301  https://dev.welcome.com$request_uri;
}

server {
	listen 443 ssl http2;

	#ssl_protocols TLSv1.2 TLSv1.3;
	
	proxy_set_header     X-SSL-Protocol $ssl_protocol;
	proxy_set_header      X-SSL-Cipher $ssl_cipher;
	
	ssl_certificate /etc/nginx/ssl/certificate.crt;
	ssl_certificate_key /etc/nginx/ssl/private.key;
	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/repo1;

	# Add index.php to the list if you are using PHP
	index index.php  index.html index.htm index.nginx-debian.html;
       
	server_name dev.welcome.com;
 	
	location / {
		#auth_basic "Please enter your credentials to continue ..";
    		#auth_basic_user_file /etc/nginx/.htpasswd;
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		#try_files $uri $uri/ =404;
                try_files $uri $uri/ /index.php?$args;
	}

	#location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
	#	try_files $uri $uri/ =404;
	#}

	# pass PHP scripts to FastCGI server
	#
	location ~ \.php$ {
		include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
		fastcgi_pass unix:/run/php/php8.3-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
server {
    listen 8080 ssl;
    server_name stage.welcome.com;

    ssl_certificate /etc/nginx/ssl/certificate2.crt;
    ssl_certificate_key /etc/nginx/ssl/private2.key;

    location / {
        root /var/www/wordpress;
        index index.php index.html;
    }
    location ~ \.php$ {
                include snippets/fastcgi-php.conf;
        #
        #       # With php-fpm (or other unix sockets):
                fastcgi_pass unix:/run/php/php7.4-fpm.sock;
    }
}
